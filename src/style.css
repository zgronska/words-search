:root {
    --font-family: 'Quicksand Variable', sans-serif;
    --fs-base: clamp(1.125rem, 1.0815rem + 0.2174vw, 1.25rem);
    --fs-heading: clamp(2.7994rem, 2.4462rem + 1.7658vw, 3.8147rem);
    @media (prefers-color-scheme: light) {
        --color-canvas: #f2eef0;
        --color-card: #f8f5f6;
        --color-accent-bg-100: rgb(124 99 109 / 0.083);
        --color-accent-bg-300: rgb(124 99 109 / 0.736);
        --color-accent-bg-400: #a68592;
        --color-accent-bg-600: #7c636d;
        --color-accent-fg-300: rgb(97 75 84 / 0.804);
        --color-accent-fg-400: #886a76;
        --color-accent-fg-600: #614b54;
        --color-neutral-bg-100: rgb(51 48 49 / 0.059);
        --color-neutral-bg-300: rgb(51 48 49 / 0.524);
        --color-neutral-bg-600: #333031;
        --color-neutral-fg-300: rgb(38 35 36 / 0.632);
        --color-neutral-fg-600: #262324;
    }
    @media (prefers-color-scheme: dark) {
        --color-canvas: #262324;
        --color-card: #2a2728;
        --color-accent-bg-100: rgb(161 147 152 / 0.068);
        --color-accent-bg-300: rgb(161 147 152 / 0.657);
        --color-accent-bg-400: #806c74;
        --color-accent-bg-600: #a19398;
        --color-accent-fg-300: rgb(193 179 185 / 0.715);
        --color-accent-fg-400: #9d8790;
        --color-accent-fg-600: #c1b3b9;
        --color-neutral-bg-100: rgb(184 183 184 / 0.052);
        --color-neutral-bg-300: rgb(184 183 184 / 0.507);
        --color-neutral-bg-600: #b8b7b8;
        --color-neutral-fg-300: rgb(223 221 222 / 0.562);
        --color-neutral-fg-600: #dfddde;
    }
}

html {
    block-size: 100%;
}

body {
    display: grid;
    block-size: 100%;
    background-color: var(--color-canvas);
    color: var(--color-neutral-fg-600);
    font-family: var(--font-family);
    font-size: var(--fs-base);
    line-height: 1.5;
    place-items: center;
}

.container {
    inline-size: min(100% - 2em, 50em);

    > * + * {
        margin-block-start: 1.5em;
    }
}

:empty:where(p, ul, ol, small) {
    display: none;
}

:where(input, select, button) {
    &:where(:focus-visible) {
        --outline-size: max(0.125rem, 0.15em);

        outline: var(--outline-size) dotted var(--color-accent-bg-300);
        outline-offset: var(--outline-size);
    }
}

h1 {
    color: var(--color-accent-fg-400);
    font-size: var(--fs-heading);
    line-height: 1.2;
}

.form-control {
    display: grid;
    gap: 0.5em;
}

.card {
    padding: 1em 1.5em;
    background-color: var(--color-card);
}

:where(input, select) {
    padding: 0.5em;
    border-radius: 0.25em;
    background-color: var(--color-card);
    box-shadow: inset 0 0 0 1px var(--color-neutral-bg-300);
    line-height: 1.2;

    &:where(:focus-visible, :hover) {
        background-color: var(--color-neutral-bg-100);
    }

    &::placeholder {
        color: var(--color-neutral-fg-300);
        font-size: 0.75em;
    }
}

form {
    display: grid;
    grid-auto-rows: repeat(2, auto 1fr auto);
    grid-template-columns: repeat(2, 1fr);
    transition: grid-template-rows 0.3s ease;
    gap: 0.5em 1em;

    button {
        grid-column: span 2;
        padding: 0.5em 1.5em;
        background-color: var(--color-accent-bg-600);
        color: var(--color-card);
        text-align: center;
        text-transform: uppercase;
        cursor: pointer;

        &:where(:hover, :focus-visible) {
            background-color: color-mix(
                in oklab,
                var(--color-accent-bg-600),
                #fff 15%
            );
        }

        &:where(:disabled) {
            background-color: var(--color-accent-bg-100);
            color: var(--color-neutral-fg-300);
            cursor: not-allowed;
        }
    }

    .form-control {
        grid-row: span 3;
        grid-template-rows: subgrid;

        label {
            align-self: end;

            &:has(+ input:required) {
                &::after {
                    content: '*' / 'required';
                    margin-inline-start: 0.25em;
                    color: var(--color-accent-fg-300);
                }
            }
        }
    }
}

[data-validation] {
    &:not(:empty) {
        display: inline-block;
        padding: 0.2em 0.5em;
        border: 1px dashed var(--color-accent-bg-300);
        color: var(--color-neutral-fg-300);
        font-size: 0.75em;
        justify-self: end;

        &::before {
            content: '!';
            display: inline-block;
            margin-inline-end: 0.5em;
            color: var(--color-accent-fg-300);
        }
    }
}

.results {
    &:not(:has(:where(ol, p):not(:empty))) {
        display: none;
    }
}

#alert {
    color: var(--color-accent-fg-300);
}

#result {
    counter-reset: orderedlist;

    &:has(li) {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(12.5rem, 1fr));
        gap: 0.5em 1em;
    }

    li {
        &::before {
            content: counter(orderedlist);
            display: inline-block;
            block-size: 1.5em;
            margin-inline-end: 0.5em;
            border-radius: 50%;
            background-color: var(--color-accent-bg-400);
            color: var(--color-neutral-fg-600);
            font-size: 0.75em;
            text-align: center;
            counter-increment: orderedlist;
            aspect-ratio: 1;
        }
    }
}

.sorting {
    grid-auto-flow: column;
    align-items: center;
    justify-content: end;
    margin-block-end: 1em;
}
